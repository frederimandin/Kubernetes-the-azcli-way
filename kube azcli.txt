## still needs a lot of comments :)

# Set the private variables
AZURE_SUBSCRIPTION = Id_of_the_correct_Azure_subscription
SSH_PASSWORD = Password_for_SSH_connection_to_the_hosts
SSH_USERNAME = Username_to_use_for_SSH_connection
GROUP = Name_of_the_resource_group
VNET_NAME = Name_of_the_Vnet
NSG_NAME = Name_of_the_NSG
SUBNET_NAME = Name_fo_the_Subnet
PUBLIC_IP_NAME = Name_of_the_Public_IP

# Set the correct Azure subscription id
az account set -s $AZURE_SUBSCRIPTION

# create the ressource groupe in Wet Europe
az group create -l westeurope -n $GROUP
az network vnet create -n $VNET_NAME -g $GROUP
az network vnet update -g $GROUP -n $VNET_NAME --address-prefixes 10.240.0.0/16 10.200.0.0/16
az network nsg create -n $NSG_NAME -g $GROUP -l westeurope
az network vnet subnet create -g $GROUP --vnet-name $VNET_NAME -n $SUBNET_NAME --address-prefix 10.240.0.0/24 --network-security-group $NSG_NAME
az network nsg rule create -g $GROUP --nsg-name $NSG_NAME -n allow-internal --priority 100 --access Allow --source-address-prefix 10.240.0.0/24
az network nsg rule create -g $GROUP --nsg-name $NSG_NAME -n allow-internal2 --priority 101 --access Allow --source-address-prefix 10.200.0.0/16
az network nsg rule create -g $GROUP --nsg-name $NSG_NAME -n allow-external3 --priority 102 --access Allow --destination-port-range 22
az network nsg rule create -g $GROUP --nsg-name $NSG_NAME -n allow-external --priority 103 --access Allow --destination-port-range 3389
az network nsg rule create -g $GROUP --nsg-name $NSG_NAME -n allow-external2 --priority 104 --access Allow --destination-port-range 6443
az network nsg rule create -g $GROUP --nsg-name $NSG_NAME -n allow-healthz --priority 105 --access Allow --source-address-prefix 130.211.0.0/22 --destination-port-range 8080
az network nsg rule create -g $GROUP --nsg-name $NSG_NAME -n allow-healthz2 --priority 106 --access Allow --source-address-prefix 35.191.0.0/16 --destination-port-range 8080
az network public-ip create -n $PUBLIC_IP_NAME -l westeurope -g $GROUP  --allocation-method static

az vm create -n controller0 -g $GROUP --image UbuntuLTS --vnet-name $VNET_NAME --subnet $SUBNET_NAME --private-ip-address 10.240.0.10 --authentication-type password --admin-username $SSH_USERNAME --admin-password $SSH_PASSWORD --nsg ""
az vm create -n controller1 -g $GROUP --image UbuntuLTS --vnet-name $VNET_NAME --subnet $SUBNET_NAME --private-ip-address 10.240.0.11 --authentication-type password --admin-username $SSH_USERNAME --admin-password $SSH_PASSWORD --nsg ""
az vm create -n controller2 -g $GROUP --image UbuntuLTS --vnet-name $VNET_NAME --subnet $SUBNET_NAME --private-ip-address 10.240.0.12 --authentication-type password --admin-username $SSH_USERNAME --admin-password $SSH_PASSWORD --nsg ""

echo "#cloud-config" >> cloud-config.txt
echo "runcmd:" >> cloud-config.txt
echo "	- [apt-get, update]" >> cloud-config.txt
echo "	- [apt-get, install, -y, socat]" >> cloud-config.txt

az vm create -n worker0 -g $GROUP --image UbuntuLTS --vnet-name $VNET_NAME --subnet $SUBNET_NAME --private-ip-address 10.240.0.20 --authentication-type password --admin-username $SSH_USERNAME --admin-password $SSH_PASSWORD --custom-data cloud-config.txt --nsg ""
az vm create -n worker1 -g $GROUP --image UbuntuLTS --vnet-name $VNET_NAME --subnet $SUBNET_NAME --private-ip-address 10.240.0.21 --authentication-type password --admin-username $SSH_USERNAME --admin-password $SSH_PASSWORD --custom-data cloud-config.txt --nsg ""
az vm create -n worker2 -g $GROUP --image UbuntuLTS --vnet-name $VNET_NAME --subnet $SUBNET_NAME --private-ip-address 10.240.0.22 --authentication-type password --admin-username $SSH_USERNAME --admin-password $SSH_PASSWORD --custom-data cloud-config.txt --nsg ""


KUBERNETES_PUBLIC_ADDRESS=$(az network public-ip show -g $GROUP -n $PUBLIC_IP_NAME --query "{ address: ipAddress }" -o tsv)


for host in worker0 worker1 worker2; do
	HOSTIP=$(az vm list-ip-addresses -g $GROUP -n ${host} --query '[].virtualMachine.network.publicIpAddresses[0].ipAddress' -o tsv)
  scp ca.pem kube-proxy.pem kube-proxy-key.pem ${HOSTIP}:~/
done


for host in controller0 controller1 controller2; do
	HOSTIP=$(az vm list-ip-addresses -g $GROUP -n ${host} --query '[].virtualMachine.network.publicIpAddresses[0].ipAddress' -o tsv)
  scp ca.pem ca-key.pem kubernetes-key.pem kubernetes.pem ${HOSTIP}:~/
done

for host in controller0 controller1 controller2; do
	HOSTIP=$(az vm list-ip-addresses -g $GROUP -n ${host} --query '[].virtualMachine.network.publicIpAddresses[0].ipAddress' -o tsv)
  scp token.csv ${HOSTIP}:~/
done

for host in worker0 worker1 worker2; do
	HOSTIP=$(az vm list-ip-addresses -g $GROUP -n ${host} --query '[].virtualMachine.network.publicIpAddresses[0].ipAddress' -o tsv)
  scp bootstrap.kubeconfig kube-proxy.kubeconfig ${HOSTIP}:~/
done

for host in controller0 controller1 controller2; do
	HOSTIP=$(az vm list-ip-addresses -g $GROUP -n ${host} --query '[].virtualMachine.network.publicIpAddresses[0].ipAddress' -o tsv)
  echo $HOSTIP
done


INTERNAL_IP=$(hostname -I | cut -d' ' -f1)
ETCD_NAME=controller$(echo $INTERNAL_IP | cut -c 11)

